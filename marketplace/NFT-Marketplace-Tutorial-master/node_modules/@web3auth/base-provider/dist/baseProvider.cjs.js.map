{"version":3,"file":"baseProvider.cjs.js","mappings":"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","sources":["webpack://@web3auth/base-provider/webpack/bootstrap","webpack://@web3auth/base-provider/webpack/runtime/compat get default export","webpack://@web3auth/base-provider/webpack/runtime/define property getters","webpack://@web3auth/base-provider/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/base-provider/webpack/runtime/make namespace object","webpack://@web3auth/base-provider/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/base-provider/external commonjs2 \"@toruslabs/base-controllers\"","webpack://@web3auth/base-provider/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/base-provider/external commonjs2 \"eth-rpc-errors\"","webpack://@web3auth/base-provider/./src/baseProvider.ts","webpack://@web3auth/base-provider/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@web3auth/base-provider/./src/commonPrivateKeyProvider.ts","webpack://@web3auth/base-provider/external commonjs2 \"json-rpc-random-id\"","webpack://@web3auth/base-provider/./src/utils.ts","webpack://@web3auth/base-provider/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/base-controllers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","import { BaseConfig, BaseController, BaseState, createEventEmitterProxy, SafeEventEmitterProvider } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseProvider } from \"./IBaseProvider\";\n\nexport interface BaseProviderState extends BaseState {\n  chainId: string;\n}\n\nexport interface BaseProviderConfig extends BaseConfig {\n  chainConfig: Partial<CustomChainConfig>;\n  networks?: Record<string, CustomChainConfig>;\n  skipLookupNetwork?: boolean;\n}\n\nexport abstract class BaseProvider<C extends BaseProviderConfig, S extends BaseProviderState, P>\n  extends BaseController<C, S>\n  implements IBaseProvider<P>\n{\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  constructor({ config, state }: { config: C; state?: S }) {\n    super({ config, state });\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\",\n    } as S;\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: { [config.chainConfig.chainId]: config.chainConfig },\n    } as C;\n    super.initialize();\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public addChain(chainConfig: CustomChainConfig): void {\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: { ...this.config.networks, [chainConfig.chainId]: chainConfig },\n    } as C);\n  }\n\n  public getChainConfig(chainId: string): CustomChainConfig | null {\n    const chainConfig = this.config.networks?.[chainId];\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(`Chain ${chainId} is not supported, please add chainConfig for it`);\n    return chainConfig;\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected updateProviderEngineProxy(providerEngineProxy: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(providerEngineProxy);\n    }\n  }\n\n  abstract setupProvider(provider: P): Promise<void>;\n\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n\n  protected abstract lookupNetwork(provider?: P): Promise<string | void>;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","import { createEventEmitterProxy, providerFromEngine, SafeEventEmitterProvider } from \"@toruslabs/base-controllers\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCEngine, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nimport { IBaseProvider } from \"./IBaseProvider\";\n\nexport class CommonPrivateKeyProvider implements IBaseProvider<string> {\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public static getProviderInstance = async (params: { privKey: string }): Promise<CommonPrivateKeyProvider> => {\n    const providerFactory = new CommonPrivateKeyProvider();\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  addChain(_: CustomChainConfig): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected updateProviderEngineProxy(providerEngineProxy: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(providerEngineProxy);\n    }\n  }\n\n  private getPrivKeyMiddleware(privKey: string): JRPCMiddleware<unknown, unknown> {\n    const middleware = {\n      getPrivatekey: async (): Promise<string> => {\n        return privKey;\n      },\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n\n  private createPrivKeyMiddleware({ getPrivatekey }): JRPCMiddleware<unknown, unknown> {\n    async function getPrivatekeyHandler(_: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n      res.result = await getPrivatekey();\n    }\n\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler),\n    });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"json-rpc-random-id\");","import getCreateRandomId from \"json-rpc-random-id\";\nexport const createRandomId = getCreateRandomId();\n","export * from \"./baseProvider\";\nexport * from \"./commonPrivateKeyProvider\";\nexport * from \"./IBaseProvider\";\nexport * from \"./utils\";\n"],"names":["BaseController","createEventEmitterProxy","WalletInitializationError","ethErrors","BaseProvider","constructor","_ref","config","state","_defineProperty","chainConfig","invalidProviderConfigError","chainId","rpcTarget","defaultState","defaultConfig","networks","initialize","provider","_providerEngineProxy","_","Error","addChain","rpc","invalidParams","configure","_objectSpread","getChainConfig","_this$config$networks","invalidRequest","getProviderEngineProxy","updateProviderEngineProxy","providerEngineProxy","setTarget","providerFromEngine","createAsyncMiddleware","createScaffoldMiddleware","JRPCEngine","CommonPrivateKeyProvider","setupProvider","privKey","privKeyMiddleware","getPrivKeyMiddleware","engine","push","switchChain","Promise","resolve","middleware","getPrivatekey","createPrivKeyMiddleware","getPrivatekeyHandler","res","result","private_key","params","providerFactory","getCreateRandomId","createRandomId"],"sourceRoot":""}