{"version":3,"file":"openloginEd25519.cjs.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA,MAAM,4BAA4B;;;ACAS;AAQ3C,MAAMC,CAAC,GAAID,iCAAqB;AAEzB,SAASG,aAAaA,CAACC,UAA2B,EAGvD;EACA,IAAIC,OAAe;EACnB,IAAI,OAAOD,UAAU,KAAK,QAAQ,EAAE;IAClCC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACH,UAAU,EAAE,KAAK,CAAC;EAC1C,CAAC,MAAM;IACLC,OAAO,GAAGD,UAAU;EACtB;EACA;;EAEA,MAAMI,CAAC,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;EAC5B,MAAMC,CAAC,GAAG,CAACT,CAAC,CAACU,EAAE,EAAE,EAAEV,CAAC,CAACU,EAAE,EAAE,EAAEV,CAAC,CAACU,EAAE,EAAE,EAAEV,CAAC,CAACU,EAAE,EAAE,CAAC;EAC1C,MAAMC,EAAE,GAAG,IAAIH,UAAU,CAAC,CAAC,GAAG,IAAIA,UAAU,CAACJ,OAAO,CAAC,EAAE,GAAG,IAAII,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9E,MAAMI,EAAE,GAAG,IAAIJ,UAAU,CAAC,EAAE,CAAC;EAC7BR,CAAC,CAACa,WAAW,CAACN,CAAC,EAAEI,EAAE,EAAE,EAAE,CAAC;EAExBJ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG;EAEXA,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG;EAEZA,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE;EACXP,CAAC,CAACc,UAAU,CAACL,CAAC,EAAEF,CAAC,CAAC;EAClBP,CAAC,CAACe,IAAI,CAACH,EAAE,EAAEH,CAAC,CAAC;EACb,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAEL,EAAE,CAACK,CAAC,GAAG,EAAE,CAAC,GAAGJ,EAAE,CAACI,CAAC,CAAC;EAElD,OAAO;IAAEL,EAAE,EAAEN,MAAM,CAACC,IAAI,CAACK,EAAE,CAAC;IAAEC,EAAE,EAAEP,MAAM,CAACC,IAAI,CAACM,EAAE;EAAE,CAAC;AACrD","sources":["webpack://@toruslabs/openlogin-ed25519/webpack/bootstrap","webpack://@toruslabs/openlogin-ed25519/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin-ed25519/webpack/runtime/define property getters","webpack://@toruslabs/openlogin-ed25519/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin-ed25519/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin-ed25519/external commonjs2 \"@toruslabs/tweetnacl-js\"","webpack://@toruslabs/openlogin-ed25519/./src/utils.ts","webpack://@toruslabs/openlogin-ed25519/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/tweetnacl-js\");","import nacl from \"@toruslabs/tweetnacl-js\";\n\nexport type SECP256K1KeyType = \"secp256k1\";\nexport type ED25519KeyType = \"ed25519\";\n\nexport type SECP256K1Key = Buffer;\nexport type ED25519Key = Buffer;\n\nconst l = (nacl as any).lowlevel;\n\nexport function getED25519Key(privateKey: string | Buffer): {\n  sk: Buffer;\n  pk: Buffer;\n} {\n  let privKey: Buffer;\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  }\n  // Implementation copied from tweetnacl\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n\n  d[0] &= 248;\n\n  d[31] &= 127;\n\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return { sk: Buffer.from(sk), pk: Buffer.from(pk) };\n}\n","export * from \"./utils\";\n"],"names":["nacl","l","lowlevel","getED25519Key","privateKey","privKey","Buffer","from","d","Uint8Array","p","gf","sk","pk","crypto_hash","scalarbase","pack","i"],"sourceRoot":""}