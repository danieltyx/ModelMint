{"ast":null,"code":"\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\"; // @TODO: Merge this with bytes\n\nexport class FixedBytesCoder extends Coder {\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    this.size = size;\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n  }\n\n  encode(writer, value) {\n    let data = arrayify(value);\n\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", value);\n    }\n\n    return writer.writeBytes(data);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;AAEA,SAASA,QAAT,EAA8BC,OAA9B,QAA6C,sBAA7C;AAEA,SAASC,KAAT,QAAsC,kBAAtC,C,CAEA;;AACA,OAAM,MAAOC,eAAP,SAA+BD,KAA/B,CAAoC;EAGtCE,YAAYC,IAAZ,EAA0BC,SAA1B,EAA2C;IACvC,IAAIC,IAAI,GAAG,UAAUC,MAAM,CAACH,IAAD,CAA3B;IACA,MAAME,IAAN,EAAYA,IAAZ,EAAkBD,SAAlB,EAA6B,KAA7B;IACA,KAAKD,IAAL,GAAYA,IAAZ;EACH;;EAEDI,YAAY;IACR,OAAQ,oEAAD,CAAuEC,SAAvE,CAAiF,CAAjF,EAAoF,IAAI,KAAKL,IAAL,GAAY,CAApG,CAAP;EACH;;EAEDM,MAAM,CAACC,MAAD,EAAiBC,KAAjB,EAAiC;IACnC,IAAIC,IAAI,GAAGd,QAAQ,CAACa,KAAD,CAAnB;;IACA,IAAIC,IAAI,CAACC,MAAL,KAAgB,KAAKV,IAAzB,EAA+B;MAAE,KAAKW,WAAL,CAAiB,uBAAjB,EAA0CH,KAA1C;IAAmD;;IACpF,OAAOD,MAAM,CAACK,UAAP,CAAkBH,IAAlB,CAAP;EACH;;EAEDI,MAAM,CAACC,MAAD,EAAe;IACjB,OAAOA,MAAM,CAACC,MAAP,CAAc,KAAKb,IAAnB,EAAyBN,OAAO,CAACkB,MAAM,CAACE,SAAP,CAAiB,KAAKhB,IAAtB,CAAD,CAAhC,CAAP;EACH;;AArBqC","names":["arrayify","hexlify","Coder","FixedBytesCoder","constructor","size","localName","name","String","defaultValue","substring","encode","writer","value","data","length","_throwError","writeBytes","decode","reader","coerce","readBytes"],"sources":["/Users/tingyandeng/Documents/GitHub/ModelGPT/marketplace/NFT-Marketplace-Tutorial-master/node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}