import { SafeEventEmitterProvider, WALLET_ADAPTER_TYPE } from "@web3auth/base";
import { Web3AuthNoModal, Web3AuthNoModalOptions } from "@web3auth/no-modal";
import { LoginModal, UIConfig } from "@web3auth/ui";
import { IWeb3AuthModal, ModalConfig } from "./interface";
export interface Web3AuthOptions extends Web3AuthNoModalOptions {
    /**
     * web3auth instance provides different adapters for different type of usages. If you are dapp and want to
     * use external wallets like metamask, then you can use the `DAPP` authMode.
     * If you are a wallet and only want to use you own wallet implementations along with openlogin,
     * then you should use `WALLET` authMode.
     *
     * @defaultValue `DAPP`
     */
    authMode?: "DAPP" | "WALLET";
    /**
     * Config for configuring modal ui display properties
     */
    uiConfig?: Omit<UIConfig, "adapterListener">;
}
export declare class Web3Auth extends Web3AuthNoModal implements IWeb3AuthModal {
    loginModal: LoginModal;
    readonly options: Web3AuthOptions;
    private modalConfig;
    constructor(options: Web3AuthOptions);
    initModal(params?: {
        modalConfig?: Record<WALLET_ADAPTER_TYPE, ModalConfig>;
    }): Promise<void>;
    connect(): Promise<SafeEventEmitterProvider | null>;
    private initExternalWalletAdapters;
    private initializeInAppWallet;
    private subscribeToLoginModalEvents;
}
