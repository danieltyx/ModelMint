{"ast":null,"code":"\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n\n  defaultValue() {\n    return \"0x\";\n  }\n\n  encode(writer, value) {\n    value = arrayify(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber(), true);\n  }\n\n}\nexport class BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(super.decode(reader)));\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;AAEA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,sBAAlC;AAEA,SAASC,KAAT,QAAsC,kBAAtC;AAEA,OAAM,MAAOC,iBAAP,SAAiCD,KAAjC,CAAsC;EACxCE,YAAYC,IAAZ,EAA0BC,SAA1B,EAA2C;IACxC,MAAMD,IAAN,EAAYA,IAAZ,EAAkBC,SAAlB,EAA6B,IAA7B;EACF;;EAEDC,YAAY;IACR,OAAO,IAAP;EACH;;EAEDC,MAAM,CAACC,MAAD,EAAiBC,KAAjB,EAA2B;IAC7BA,KAAK,GAAGV,QAAQ,CAACU,KAAD,CAAhB;IACA,IAAIC,MAAM,GAAGF,MAAM,CAACG,UAAP,CAAkBF,KAAK,CAACC,MAAxB,CAAb;IACAA,MAAM,IAAIF,MAAM,CAACI,UAAP,CAAkBH,KAAlB,CAAV;IACA,OAAOC,MAAP;EACH;;EAEDG,MAAM,CAACC,MAAD,EAAe;IACjB,OAAOA,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACE,SAAP,GAAmBC,QAAnB,EAAjB,EAAgD,IAAhD,CAAP;EACH;;AAlBuC;AAqB5C,OAAM,MAAOC,UAAP,SAA0BhB,iBAA1B,CAA2C;EAC7CC,YAAYE,SAAZ,EAA6B;IACzB,MAAM,OAAN,EAAeA,SAAf;EACH;;EAEDQ,MAAM,CAACC,MAAD,EAAe;IACjB,OAAOA,MAAM,CAACK,MAAP,CAAc,KAAKC,IAAnB,EAAyBpB,OAAO,CAAC,MAAMa,MAAN,CAAaC,MAAb,CAAD,CAAhC,CAAP;EACH;;AAP4C","names":["arrayify","hexlify","Coder","DynamicBytesCoder","constructor","type","localName","defaultValue","encode","writer","value","length","writeValue","writeBytes","decode","reader","readBytes","readValue","toNumber","BytesCoder","coerce","name"],"sources":["/Users/tingyandeng/Documents/GitHub/ModelGPT/marketplace/NFT-Marketplace-Tutorial-master/node_modules/@ethersproject/abi/src.ts/coders/bytes.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}