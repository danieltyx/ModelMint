{"version":3,"file":"baseSolanaAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/base-solana-adapter/webpack/bootstrap","webpack://@web3auth/base-solana-adapter/webpack/runtime/compat get default export","webpack://@web3auth/base-solana-adapter/webpack/runtime/define property getters","webpack://@web3auth/base-solana-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/base-solana-adapter/webpack/runtime/make namespace object","webpack://@web3auth/base-solana-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/base-solana-adapter/external commonjs2 \"bs58\"","webpack://@web3auth/base-solana-adapter/./src/baseSolanaAdapter.ts","webpack://@web3auth/base-solana-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bs58\");","import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        bs58.encode(signedMessage as Uint8Array),\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","export * from \"./baseSolanaAdapter\";\n"],"names":["ADAPTER_EVENTS","ADAPTER_STATUS","BaseAdapter","CHAIN_NAMESPACES","checkIfTokenIsExpired","clearToken","getChainConfig","getSavedToken","saveToken","signChallenge","verifySignedChallenge","WalletLoginError","bs58","BaseSolanaAdapter","init","_","chainConfig","SOLANA","authenticateUser","provider","status","CONNECTED","notConnectedError","chainNamespace","chainId","accounts","request","method","length","existingToken","name","isExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","encodedMessage","TextEncoder","encode","signedMessage","params","message","display","sessionTime","clientId","web3AuthNetwork","disconnectSession","checkDisconnectionRequirements","disconnect","rehydrated","emit","DISCONNECTED"],"sourceRoot":""}