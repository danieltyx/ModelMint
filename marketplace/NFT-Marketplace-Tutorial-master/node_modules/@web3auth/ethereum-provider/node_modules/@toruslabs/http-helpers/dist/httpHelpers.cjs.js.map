{"version":3,"file":"httpHelpers.cjs.js","mappings":"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","sources":["webpack://@toruslabs/http-helpers/webpack/bootstrap","webpack://@toruslabs/http-helpers/webpack/runtime/compat get default export","webpack://@toruslabs/http-helpers/webpack/runtime/define property getters","webpack://@toruslabs/http-helpers/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/http-helpers/webpack/runtime/make namespace object","webpack://@toruslabs/http-helpers/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/http-helpers/external commonjs2 \"lodash.merge\"","webpack://@toruslabs/http-helpers/external commonjs2 \"loglevel\"","webpack://@toruslabs/http-helpers/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","/* eslint-disable @typescript-eslint/no-throw-literal */\nimport type { SpanContext, TransactionContext } from \"@sentry/types\";\nimport merge from \"lodash.merge\";\nimport logLevel, { levels, LogLevelDesc } from \"loglevel\";\nconst log = logLevel.getLogger(\"http-helpers\");\nlog.setLevel(levels.INFO);\nexport interface CustomOptions {\n  [key: string]: unknown;\n  useAPIKey?: boolean;\n  isUrlEncodedData?: boolean;\n  timeout?: number;\n  logTracingHeader?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Data {}\n\nlet apiKey = \"torus-default\";\nlet embedHost = \"\";\n\n// #region API Keys\nexport const gatewayAuthHeader = \"x-api-key\";\nexport const gatewayEmbedHostHeader = \"x-embed-host\";\n\ninterface Sentry {\n  startTransaction(_: TransactionContext): {\n    startChild(a: SpanContext): {\n      finish(): void;\n    };\n    finish(): void;\n  };\n}\n\nlet sentry: Sentry | null = null;\nconst tracingOrigins: string[] = [];\nconst tracingPaths: string[] = [];\n\nexport function enableSentryTracing(_sentry: Sentry, _tracingOrigins: string[], _tracingPaths: string[]) {\n  sentry = _sentry;\n  tracingOrigins.push(..._tracingOrigins);\n  tracingPaths.push(..._tracingPaths);\n}\n\nexport function setEmbedHost(embedHost_: string): void {\n  embedHost = embedHost_;\n}\n\nexport function clearEmbedHost(): void {\n  embedHost = \"\";\n}\n\nexport function getEmbedHost(): string {\n  return embedHost;\n}\n\nexport function setAPIKey(apiKey_: string): void {\n  apiKey = apiKey_;\n}\n\nexport function clearAPIKey(): void {\n  apiKey = \"torus-default\";\n}\n\nexport function getAPIKey(): string {\n  return apiKey;\n}\n\n// #endregion\n\nexport function setLogLevel(level: LogLevelDesc) {\n  log.setLevel(level);\n}\n\nasync function fetchAndTrace(url: string, init: RequestInit): Promise<Response> {\n  let _url: URL | null = null;\n  try {\n    _url = new URL(url);\n  } catch (error) {}\n  if (sentry && _url && (tracingOrigins.includes(_url.origin) || tracingPaths.includes(_url.pathname))) {\n    const transaction = sentry.startTransaction({\n      name: url,\n    });\n    const span = transaction.startChild({\n      op: \"http\",\n    }); // This function returns a Span\n\n    const response = await fetch(url, init);\n    span.finish(); // Remember that only finished spans will be sent with the transaction\n\n    transaction.finish(); // Finishing the transaction will send it to Sentry\n\n    return response;\n  }\n\n  return fetch(url, init);\n}\nfunction getApiKeyHeaders(): Record<string, string> {\n  const headers = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nfunction debugLogResponse(response: Response) {\n  log.info(`Response: ${response.status} ${response.statusText}`);\n  log.info(`Url: ${response.url}`);\n}\n\nfunction logTracingHeader(response: Response) {\n  log.info(`Request tracing with traceID=${response.headers.get(\"x-web3-correlation-id\")}`);\n}\n\nexport const promiseTimeout = <T>(ms: number, promise: Promise<T>): Promise<T> => {\n  const timeout = new Promise<T>((resolve, reject) => {\n    const id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new Error(`Timed out in ${ms}ms`));\n    }, ms);\n  });\n  return Promise.race<T>([promise, timeout]);\n};\n\nexport const get = async <T>(url: string, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {},\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"GET\" });\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const post = <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"POST\" });\n\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout<T>(\n    (customOptions.timeout as number) || 60000,\n    fetchAndTrace(url, options).then((response) => {\n      if (customOptions.logTracingHeader) {\n        logTracingHeader(response);\n      }\n      if (response.ok) {\n        return response.json() as Promise<T>;\n      }\n      debugLogResponse(response);\n      throw response;\n    })\n  );\n};\n\nexport const patch = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PATCH\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const put = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PUT\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const remove = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"DELETE\" });\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const generateJsonRPCObject = (method: string, parameters: unknown) => ({\n  jsonrpc: \"2.0\",\n  method,\n  id: 10,\n  params: parameters,\n});\n\nexport const promiseRace = <T>(url: string, options: RequestInit, timeout = 60000) =>\n  Promise.race([\n    get<T>(url, options),\n    new Promise<T>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"timed out\"));\n      }, timeout);\n    }),\n  ]);\n"],"names":["merge","logLevel","levels","log","getLogger","setLevel","INFO","apiKey","embedHost","gatewayAuthHeader","gatewayEmbedHostHeader","sentry","tracingOrigins","tracingPaths","enableSentryTracing","_sentry","_tracingOrigins","_tracingPaths","push","setEmbedHost","embedHost_","clearEmbedHost","getEmbedHost","setAPIKey","apiKey_","clearAPIKey","getAPIKey","setLogLevel","level","fetchAndTrace","url","init","_url","URL","error","includes","origin","pathname","transaction","startTransaction","name","span","startChild","op","response","fetch","finish","getApiKeyHeaders","headers","debugLogResponse","info","status","statusText","logTracingHeader","get","promiseTimeout","ms","promise","timeout","Promise","resolve","reject","id","setTimeout","clearTimeout","Error","race","options_","arguments","length","undefined","customOptions","defaultOptions","mode","useAPIKey","_objectSpread","options","method","ok","json","post","data","isUrlEncodedData","body","JSON","stringify","then","patch","put","remove","generateJsonRPCObject","parameters","jsonrpc","params","promiseRace"],"sourceRoot":""}